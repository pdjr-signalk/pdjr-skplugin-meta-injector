openapi: 3.0.0
info:
  title: HTTP API for pdjr-signalk-metadata
  version: 1.0.0
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  description: |
    [pdjr-skplugin-metadata](https://github.com/pdjr-signalk/pdjr-skplugin-metadata)
    is a plugin for the
    [Signal K node server](https://github.com/SignalK/signalk-server).

    The plugin exposes this HTTP API under the root
    https://*server_ip*:*server_port*/plugins/metadata
  
    The Signal K documentation uses the terms 'key' and 'path'
    interchangeably a synonyms for the identifier of a data
    item in the Signal K data store.
    This document uses the term 'key' when referring to the
    identififier of a resource managed by a resource provider and
    'path' when referring to a key in the Signal K data store.
externalDocs:
  description: Plugin README document
  url: https://github.com/pdjr-signalk/pdjr-skplugin-metadata#readme 
paths:
  /keys:
    get:
      description: |
        Get a list of all keys in the plugin's configured
        ```resourceType```.
      responses:
        200:
          description: |
            Success.
            The response body is an array of resource keys.
            
            Typically, each key value will take the form of a Signal K
            dotted path which falls within the collection of values
            that are not excluded by the plugin configuration's
            ```excludePaths``` property.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/key-list"
        500:
          description: |
            Error.
            The server was unable to service the request.
  /keys/{key}:
    get:
      description: |
        Get the value of a specified resource in plugin's configured
        ```resource type````.
      parameters:
      - name: key
        in: path
        description: |
          Identifier of the resource whose value is required.
        required: true
        schema:
          $ref: "#/components/schemas/key"
      responses:
        200:
          description: |
            Success.
            The response body is the resource value for the requested key.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/metadata-value"
        404:
          description: |
            Error.
            The requested key does not exist.
        500:
          description: |
            Error.
            The server was unable to service the request.
    put:
      description: |
        Update or create a resource in the plugin's configured
        ```resourceType``` for a specified key.
      parameters:
      - name: key
        in: path
        description: |
          Identifier of an existing or new resource.
        required: true
        schema:
          $ref: "#/components/schemas/key"
      requestBody:
        description: |
          New or replacement resource value (must be JSON object).
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/metadata-value"
      responses:
        201:
          description: |
            Success.
            The specified resource has been updated or created.
        404:
          description: |
            Error.
            The request was invalid (bad or missing reource key/value).
        405:
          description: |
            Error.
            The request was rejected because the resource repository was busy.
        500:
          description: |
            Error.
            The server was unable to service the request.
    delete:
      description: |
        Delete the resource for a specified key.
      parameters:
      - name: key
        in: path
        description: |
          Identifier of the resource to be deleted.
        required: true
        schema:
          $ref: "#/components/schemas/key"
      responses:
        200:
          description: |
            Success.
            The specified resource has been deleted.
        404:
          description: |
            Error.
            The request was invalid (bad or missing key).
        405:
          description: |
            Error.
            The request was rejected because the resource repository was busy.
        500:
          description: |
            Error.
            The server was unable to service the request.
  /paths:
    get:
      description: |
        Get a list of active Signal K paths which are not excluded by
        the plugin configuration's ```excludePaths``` property.
      responses:
        200:
          description: |
            Success.
            The responce body is an array of Signal K paths.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/key-list"
        500:
          description: |
            Error.
            The server was unable to service the request.
  /paths/{path}:
    get:
      description: |
        Get the Signal K metadata object associated with a specified path.
      parameters:
      - name: path
        in: path
        description: Path of the Signal K value whose metadata is required.
        required: true
        schema:
          $ref: "#/components/schemas/key"
      responses:
        200:
          description: |
            Success.
            The response body contains the metadata value for the
            requested path or if the specified path had no associated
            metadata the value ```{}```. 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/metadata-value"
        404:
          description: |
            Error.
            The requested path does not exist.
        500:
          description: |
            Error.
            The server was unable to service the request.
  /compose:
    patch:
      description: |
        Trigger composition of metadata resources from metadata
        configuration resources.
      responses:
        200:
          description: |
            Success.
            All configuration fies were processed and new metadata
            resources merged into the resource collection.
        405:
          description: |
            Error.
            The request was rejected because the resource repository was busy.
        500:
          description: |
            Error.
            Some, but not all, configuration files were processed and
            new metadata resources may have been merged into the
            resource collection.
  /snapshot:
    patch:
      description: |
        Copy/merge all live Signal K metadata objects into the resource
        repository.
      responses:
        200:
          description: |
            Success.
            All Signal K paths were processed and metadata values
            merged into the resource collection.
        405:
          description: |
            Error.
            The request was rejected because the resource repository was busy.
        500:
          description: |
            Error.
            Some, but not all, Signal K paths may have been processed
            and metadata values merged into the resource collection.
components:
  schemas:
    key:
      description: Signal K key/path expressesed using dotted notation or the name of a metadata resource which is usually, but not necessarily, the same thing.
      example: "tanks.wasteWater.0.currentLevel"
      type: string
    key-list:
      description: Array containing a sorted list of Signal K or metadata keys.
      example: [ "tanks.wasteWater.0.currentLevel" ]
      type: array
      items:
        $ref: "#/components/schemas/key"
    metadata-value:
      type: object
      description: Single metadata value (see Signal K specification).
